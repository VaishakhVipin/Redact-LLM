import React from 'react';
import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';
import { Progress } from '@/components/ui/progress';
import { VulnerabilityDetail } from '@/services/api';

interface VulnerabilityBreakdownProps {
  breakdown: { [key: string]: VulnerabilityDetail };
}

const categoryNames: { [key: string]: string } = {
  jailbreak: 'Jailbreak',
  hallucination: 'Hallucination',
  advanced: 'Advanced',
};

export function VulnerabilityBreakdown({ breakdown }: VulnerabilityBreakdownProps) {
  if (!breakdown || Object.keys(breakdown).length === 0) {
    return null; // Don't render the card if there's no data
  }

  return (
    <Card className="bg-cream-100 border-cream-200 shadow-md">
      <CardHeader>
        <CardTitle className="font-serif text-2xl text-gray-800">Vulnerability Breakdown</CardTitle>
      </CardHeader>
      <CardContent className="space-y-6">
        {Object.entries(breakdown).map(([category, details]) => (
          <div key={category}>
            <div className="flex justify-between items-center mb-2">
              <span className="font-semibold text-gray-700 capitalize">
                {categoryNames[category] || category}
              </span>
              <span className="font-mono text-lg font-bold text-green-700">{details.score}/100</span>
            </div>
            <Progress value={details.score} className="h-3" />
            <div className="text-right text-xs text-gray-500 mt-1">
              {details.blocked} of {details.total} attacks blocked
            </div>
          </div>
        ))}
      </CardContent>
    </Card>
  );
}
